#
# Copyright 2018-2023 Elyra Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Elyra Release
on:
  schedule:
    - cron: "0 4 * * *" # 4am UTC everyday
  pull_request:
    branches: [ "**" ]
    paths:
      - ".github/workflows/release*"
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      tag:
        type: string
        required: true
        description: "Tag associated with the release (e.g.: v4.0.0)"
      dry_run:
        type: boolean
        required: true
        default: true
        description: "Indicates if it is a dry run, when artifacts are not published"

env:
  FORCE_COLOR: true
  NODE_VERSION: 20.11.0
  YARN_VERSION: 3.5.0
  PYTHON_VERSION: 3.11

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.ref }}
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Yarn ${{ env.YARN_VERSION }}
        run: |
          corepack prepare yarn@${{ env.YARN_VERSION }} --activate
          yarn set version ${{ env.YARN_VERSION }}
          yarn --version
      - name: Check version
        if: ${{ github.repository_owner == 'opendatahub-io' && (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && !inputs.dry_run)) }}
        run: |
          set -o pipefail
          LATEST_TAG=$(git describe --tags --match="v*")
          if [[ "$LATEST_TAG" != "v$(cat ./elyra/_version.py | grep "__version__" | cut -d'"' -f 2)" ]]; then
            echo "::error title='$LATEST_TAG tag does not match project version'::"
            exit 1
          fi
          echo "::info title='$LATEST_TAG tag is ready to be released to PyPI' ::"
      - name: Build package
        run: |
          make install-prod
      - name: Publish package on PyPI
        if: ${{ github.repository_owner == 'opendatahub-io' && (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && !inputs.dry_run)) }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          print-hash: true
          packages-dir: dist/
